---
author: Panos G. Pgn
title: linux
tags: linux
date: 18/07/2010

&nbsp;
    hdparm -W0
    fdisk -H 224 -S 56 /dev/
    sfdisk -d /dev/sda | sfdisk /dev/sdb
    mdadm --create --verbose /dev/md0 --level=1 -n2 /dev/sda1 /dev/sdb2
    mdadm -As /dev/md0
    mdadm --detail --scan >> /etc/mdadm/mdadm.conf
    watch cat /proc/mdstat
    mdadm --stop /dev/md0
    mkfs.xfs -l size=64m -s size=4096 -L RAID /dev/md0
&nbsp;
    mdadm /dev/md0 --fail /dev/sda1 --remove /dev/sda1
&nbsp;
    mdadm –create –verbose /dev/md0 –level=1 –raid-devices=2 missing /dev/sdb2
    mdadm –add /dev/md0 /dev/sda1

when using xfs on top of a raid system which has striping (raid 0, 3, 4, 5, 6, 10, 50) it is wise to also tell xfs about it being on top of such a device. in our case we use raid 5 for the integrity it provides toward a single disk loss. basically the important parameters are the stripe size of the raid (in our case we used 64k stripe sizes, the default setting for the 9550sx cards) as well as the number of data disks. for raid 0, the number of data disks is the number of disks in the raid, for raid 3,4 and 5 it's one disk less (so for a 8 disk raid, there are 7 data disks) and for raid 6 it's two disks less as two disks are used for parity. then when creating the xfs filesystem use the following options:
$ mkfs.xfs -d su=<stripe_size>,sw=<nr_data_disks> -l version=2,su=<stripe_size> /dev/sdx
as an example, our raid5 with 8 disks and 64k stripe size has the following xfs on top of it:
$ mkfs.xfs -d su=64k,sw=7 -l version=2,su=64k /dev/sda

stripe unit of 1mb, stripe width of 8mb
    mkfs.xfs -o sunit=2048,swidth=16384
&nbsp;
    egrep -v '#|^ * /etc/ppp/options
&nbsp;
    route -n -v -ee
&nbsp;
    CONFIG_USB_SUSPEND
    NO_HZ
&nbsp;
    e2fsck -fD /dev/hda1
&nbsp;
    fsck.ext3 -C0 -y -f -v /dev/sda1
    kill -s (10|12) `fsck pid`

    tune2fs -o journal_data_writeback /dev/sda1
    tune2fs -O dir_index /dev/sda1
    tune2fs -m 0 /dev/sda1

    tune2fs -r 0 /dev/sda1

    debugfs -R "stat <8>" /dev/sda1
    tune2fs -O ^has_journal /dev/sda1
    tune2fs -J size=256 /dev/sda1
Manual fan control can be enabled using echo 1 > pwm1_enable and fan speed can be changed via echo n > fan1_pwm (n being a number between 0 and 255).
&nbsp;
    echo 1 > /proc/sys/vm/block_dump
&nbsp;
    tzconfig
    dpkg-reconfigure tzdata
    dpkg-reconfigure locales
    dpkg-reconfigure dash
&nbsp;
    sysctl -p
